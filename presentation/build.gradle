apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion 28

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    testOptions.unitTests.returnDefaultValues = true
}

dependencies {

    //Arrow
    implementation "io.arrow-kt:arrow-effects:$arrowVersion"
    implementation "io.arrow-kt:arrow-effects-data:$arrowVersion"
    implementation "io.arrow-kt:arrow-effects-extensions:$arrowVersion"
    implementation "io.arrow-kt:arrow-effects-io-extensions:$arrowVersion"

    // Dagger
    implementation "com.google.dagger:dagger:$daggerVersion"

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinCoroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinCoroutinesVersion"

    // Timber
    implementation "com.jakewharton.timber:timber:$timberVersion"

    // ViewModel and LiveData
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycleVersion"

    implementation project(path: ":domain")

    // Testing
    testImplementation "androidx.arch.core:core-testing:$lifecycleVersion"
    testImplementation "io.kotlintest:kotlintest-assertions-arrow:$kotlinTestVersion"
    testImplementation "junit:junit:$jUnitVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-api:$jUnit5Version"
    testImplementation "io.mockk:mockk:$mockkVersion"
    testImplementation "org.assertj:assertj-core:$assertjVersion"
}
