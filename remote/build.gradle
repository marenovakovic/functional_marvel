apply plugin: 'kotlin'
apply plugin: 'kotlin-kapt'

//apply from: rootProject.file('gradle/generated-kotlin-sources.gradle')

targetCompatibility = 1.8
sourceCompatibility = 1.8

dependencies {

    //Arrow
    implementation "io.arrow-kt:arrow-typeclasses:$arrowVersion"
    implementation "io.arrow-kt:arrow-core:$arrowVersion"
    implementation "io.arrow-kt:arrow-syntax:$arrowVersion"
    implementation "io.arrow-kt:arrow-typeclasses:$arrowVersion"
    implementation "io.arrow-kt:arrow-data:$arrowVersion"
    implementation "io.arrow-kt:arrow-instances-core:$arrowVersion"
    implementation "io.arrow-kt:arrow-instances-data:$arrowVersion"

    // JavaX Inject
    implementation "javax.inject:javax.inject:$javaxInjectVersion"

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinCoroutinesVersion"
//    implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:$kotlinxSerializationVersion"

    // Marvel API
    implementation "com.karumi:marvelapiclient:$marvelApiVersion"

    // OkHttp
    implementation "com.squareup.okhttp3:okhttp:$okHttpVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okHttpLoggingInterceptorVersion"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$retrofitCoroutineAdapterVersion"

    // Timber
    implementation "com.jakewharton.timber:timber:$timberVersion"

    implementation project(path: ':data')
    implementation project(path: ':domain')

    // Testing
    testImplementation "io.kotlintest:kotlintest-assertions-arrow:$kotlinTestVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-api:$jUnit5Version"
    testImplementation "io.mockk:mockk:$mockkVersion"
    testImplementation "org.assertj:assertj-core:$assertjVersion"
}