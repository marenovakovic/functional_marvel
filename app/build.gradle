apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'androidx.navigation.safeargs'

android {

    useLibrary 'android.test.runner'
    useLibrary 'android.test.base'
    useLibrary 'android.test.mock'

    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion

    defaultConfig {
        applicationId "com.marko.functional_marvel"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }
}

dependencies {

    //Arrow
    implementation "io.arrow-kt:arrow-effects:$arrowVersion"
    implementation "io.arrow-kt:arrow-effects-data:$arrowVersion"
    implementation "io.arrow-kt:arrow-effects-extensions:$arrowVersion"
    implementation "io.arrow-kt:arrow-effects-io-extensions:$arrowVersion"

    // AppCompat
    implementation "androidx.appcompat:appcompat:$appCompatVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion"

    // Circle Image View
    implementation "de.hdodenhof:circleimageview:$circleImageViewVersion"

    // Dagger
    implementation "com.google.dagger:dagger:$daggerVersion"
    implementation "com.google.dagger:dagger-android:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerCompilerVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerAndroidProcessorVersion"

    // Glide
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    kapt "com.github.bumptech.glide:compiler:$glideVersion"

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinCoroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinCoroutinesVersion"
//    implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:$kotlinxSerializationVersion"

    // KTX
    implementation "androidx.core:core-ktx:$ktxVersion"

    //    implementation "androidx.fragment:fragment-ktx:$ktxVersion"

    // Legacy Support
    implementation "androidx.legacy:legacy-support-v4:$legacySupportVersion"

    // Marvel API
    implementation "com.karumi:marvelapiclient:$marvelApiVersion"

    // Material
    implementation "com.google.android.material:material:$materialVersion"

    // Navigation Component
    implementation "android.arch.navigation:navigation-fragment-ktx:$navigationVersion"
    implementation "android.arch.navigation:navigation-ui-ktx:$navigationVersion"
    implementation "android.arch.navigation:navigation-common-ktx:$navigationVersion"
    implementation "android.arch.navigation:navigation-runtime-ktx:$navigationVersion"
    implementation "android.arch.navigation:navigation-testing-ktx:$navigationTestingVersion"

    // OkHttp
    implementation "com.squareup.okhttp3:okhttp:$okHttpVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okHttpLoggingInterceptorVersion"

    // RecyclerView
    implementation "androidx.recyclerview:recyclerview:$recyclerViewVersion"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$retrofitCoroutineAdapterVersion"
    implementation "io.arrow-kt:arrow-integration-retrofit-adapter:$arrowVersion"

    // Room
    implementation "androidx.room:room-runtime:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"

    // Timber
    implementation "com.jakewharton.timber:timber:$timberVersion"

    // ViewModel and LiveData
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycleVersion"

    implementation project(path: ":presentation")
    implementation project(path: ":cache")
    implementation project(path: ":remote")
    implementation project(path: ":data")
    implementation project(path: ":domain")

    // Testing
    testImplementation "androidx.arch.core:core-testing:$lifecycleVersion"
    testImplementation "junit:junit:$jUnitVersion"
    testImplementation "io.kotlintest:kotlintest-runner-junit5:$kotlinTestVersion"
    testImplementation "io.kotlintest:kotlintest-assertions-arrow:$kotlinTestVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-api:$jUnit5Version"
    testImplementation "io.mockk:mockk:$mockkVersion"
    androidTestImplementation "io.mockk:mockk-android:$mockkVersion"
    testImplementation "org.assertj:assertj-core:$assertjVersion"
    testImplementation "org.robolectric:robolectric:$robolectricVersion"
    testImplementation "androidx.room:room-testing:$roomVersion"
    testImplementation "androidx.test:core:$testCoreVersion"
    testImplementation "androidx.arch.core:core-testing:$archCoreTestingVersion"

    // AndroidJUnitRunner and JUnit Rules
    androidTestImplementation "androidx.test:runner:$testRunnerVersion"
    androidTestImplementation "androidx.test:rules:$testRulesVersion"

    // Assertions
    androidTestImplementation "androidx.test.ext:junit:$testExtVersion"
    androidTestImplementation "androidx.test.ext:truth:$testExtVersion"
    androidTestImplementation "com.google.truth:truth:$googleTruthVersion"

    // Core library
    androidTestImplementation "androidx.test:core:$testCoreVersion"

    // Dagger
    kaptAndroidTest "com.google.dagger:dagger-compiler:$daggerCompilerVersion"

    // Espresso
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
}
